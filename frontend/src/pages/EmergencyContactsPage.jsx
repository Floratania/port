import React, { useEffect, useState } from 'react';
import axiosInstance from '../api/axios';
import { toast } from 'react-hot-toast';
import { useAuth } from '../hooks/useAuth';

const EmergencyContactsPage = () => {
  const [contacts, setContacts] = useState([]);
  const { user } = useAuth();

  // –î–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [selectedContactId, setSelectedContactId] = useState(null);

  useEffect(() => {
    fetchContacts();
  }, []);

  const fetchContacts = async () => {
    try {
      const response = await axiosInstance.get('/contact/');
      setContacts(response.data);
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤:', error);
      toast.error('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤');
    }
  };

  const openModal = (contactId) => {
    setSelectedContactId(contactId);
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setSelectedContactId(null);
    setIsModalOpen(false);
  };

  const handleConfirmCall = async () => {
    if (!selectedContactId) return;

    try {
      const payload = {
        contactId: selectedContactId,
        clientName: user?.first_last_name || user?.username || '–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á',
        clientPhone: user?.phone || '–ù–æ–º–µ—Ä –Ω–µ –≤–∫–∞–∑–∞–Ω–æ',
      };

      await axiosInstance.post('/UrgentCall/', payload);
      toast.success('–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ');
      closeModal();
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', error);
      toast.error('–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è');
    }
  };

  return (
    <div className="max-w-5xl mx-auto px-4 py-8 relative">
      <h1 className="text-3xl font-extrabold text-[#003d66] mb-8 border-b-2 border-blue-300 pb-2">
        –ö–æ–Ω—Ç–∞–∫—Ç–∏ –¥–ª—è —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ–≥–æ –¥–∑–≤—ñ–Ω–∫–∞
      </h1>

      <div className="space-y-6">
        {contacts.length === 0 && (
          <p className="text-center text-gray-500">–ö–æ–Ω—Ç–∞–∫—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.</p>
        )}
        {contacts.map((contact) => (
          <div
            key={contact.id}
            className="bg-white shadow-md rounded-lg p-6 flex flex-col md:flex-row justify-between items-start md:items-center transition-transform hover:scale-[1.02] hover:shadow-lg"
          >
            <div className="mb-4 md:mb-0 space-y-1">
              <div className="text-xl font-semibold text-[#003d66]">{contact.name}</div>
              <div className="text-gray-700 flex items-center gap-2">
                <span className="text-red-500 text-lg">üìû</span> {contact.phone}
              </div>
              <div className="text-gray-700 flex items-center gap-2">
                <span className="text-blue-500 text-lg">‚úâÔ∏è</span> {contact.email}
              </div>
              <div className="text-gray-600 italic text-sm flex items-center gap-2">
                <span className="text-green-500 text-lg">üß©</span> {contact.department}
              </div>
            </div>
            <button
              onClick={() => openModal(contact.id)}
              className="self-stretch md:self-auto bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-6 rounded-lg shadow-md transition-colors duration-300"
            >
              –¢–µ—Ä–º—ñ–Ω–æ–≤–æ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏
            </button>
          </div>
        ))}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ */}
      {isModalOpen && (
        <div
          className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
          onClick={closeModal} // –∑–∞–∫—Ä–∏—Ç—Ç—è –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –º–æ–¥–∞–ª–æ–º
        >
          <div
            className="bg-white rounded-lg p-6 max-w-sm w-full"
            onClick={(e) => e.stopPropagation()} // —â–æ–± –∫–ª—ñ–∫ –≤ –º–æ–¥–∞–ª—ñ –Ω–µ –∑–∞–∫—Ä–∏–≤–∞–≤ —ó—ó
          >
            <h2 className="text-xl font-semibold mb-4 text-center text-[#003d66]">–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è</h2>
            <p className="mb-6 text-center">–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏?</p>
            <div className="flex justify-center gap-4">
              <button
                onClick={handleConfirmCall}
                className="bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-6 rounded-lg transition-colors"
              >
                –¢–∞–∫, –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é
              </button>
              <button
                onClick={closeModal}
                className="bg-gray-300 hover:bg-gray-400 text-gray-700 font-semibold py-2 px-6 rounded-lg transition-colors"
              >
                –í—ñ–¥–º—ñ–Ω–∏—Ç–∏
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

// const departmentName = (key) => {
//   const map = {
//     sales: '–í—ñ–¥–¥—ñ–ª –ø—Ä–æ–¥–∞–∂—ñ–≤',
//     service: '–í—ñ–¥–¥—ñ–ª —Å–µ—Ä–≤—ñ—Å—É',
//     logistics: '–í—ñ–¥–¥—ñ–ª –ª–æ–≥—ñ—Å—Ç–∏–∫–∏',
//   };
//   return map[key] || '–Ü–Ω—à–∏–π –≤—ñ–¥–¥—ñ–ª';
// };

export default EmergencyContactsPage;
